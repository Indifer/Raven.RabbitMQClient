测试环境
win10开发机
RabbitMQ 3.5.0，Erlang 18.2.1

测试数据
static string _message = "test";

####生产消费测试
以下测试用例均为一个生产者和一个消费者，并且RabbitMQ和测试程序都在本地运行，不受网络因素影响

1、生产消息，消费消息
生产
最大	20000/s
最小	17000/s
消费
最大	20000/s
最小	17000/s
17000-20000可以稳定运行，目测稳定在18000+，无消息积压。
生产的速度可以更快，但是消费速度会降低，并且积压了一定消息后rabbitmq不可用，无法继续生产数据

2、生产持久化消息，消费消息
生产
最大	15000/s
最小	12000/s
消费
最大	15000/s
最小	12000/s
12000-15000可以稳定运行，目测稳定在13000+，无消息积压，有小量的磁盘写操作。
生产速度更快的情况下，消息入队列和消费的速度都会降低，并且产生大量磁盘写操作
当消费进程运行一段时间后，出现消费速度下降的情况，导致了消息积压和磁盘写操作，观察后台发现Consumer utilisation参数小于100%，增加消费进程可以解决这个问题

3、生产消息，需要Ack，消费消息
生产
最大 7000/s
最小 5000/s
消费
最大 7000/s
最小 5000/s

4、生产持久化消息，需要Ack，消费消息
生产
最大 7000/s
最小 5000/s
消费
最大 7000/s
最小 5000/s
在有消费者的情况下，生产速度可以达到7000+/s，并且没有磁盘写，如果没有消费者，会写入磁盘，生产速度只有90/s

5、生产消息，需要Ack，消费消息，需要Ack
生产
最大 6000/s
最小 5000/s
消费
最大 6000/s
最小 5000/s

6、生产持久化消息，需要Ack，消费消息，需要Ack
生产、消费80/s，消息会写入磁盘

7、生产消息，消费消息，需要Ack
生产
最大	14000/s
最小	13000/s
消费
最大	14000/s
最小	13000/s

####发布订阅测试
以下测试用例均为一个发布者两个订阅者，并且RabbitMQ和测试程序都在本地运行，不受网络因素影响

1、发布消息，订阅消息
发布
最大16000/s
最小15000/s
订阅
最大16000/s
最小15000/s

2、发布消息，需要Ack，订阅消息
发布
最大3000/s
最小2000/s
订阅
最大3000/s
最小2000/s

3、发布持久化消息，订阅消息
发布
最大15000/s
最小14000/s
订阅
最大15000/s
最小14000/s

4、发布持久化消息，需要Ack，订阅消息
发布
最大3000/s
最小3000/s
订阅
最大3000/s
最小3000/s